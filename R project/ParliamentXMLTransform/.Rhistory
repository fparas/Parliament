fix(splitConferences)
setwd("C:/Users/fotis.paraschiakos/Dropbox/Public/Javaprojects/Parliament/Parliament/data/csv  for conversion to xml/csv")
splitConferences(mergedTable)
quit
fix(splitConferences)
greekMpInformation$id==1
greekMpInformation$name[id==1]
greekMpInformation$name[greekMpInformation$id==1]
XML
package(XML)
install.packages(XML)
library)XML
library(XML)
install.packages("XML")
xml<-xmlParse("sampleAkomaNtoso.xml")
root<-xmlRoot(xml)
xml<-xmlParse("sampleAkomaNtoso.xml")
xml<-xmlParse("sampleAkomaNtoso.xml")
setwd("C:/Users/fotis.paraschiakos/Dropbox/Public/Javaprojects/Parliament/Parliament/data/csv  for conversion to xml/templates")
xml<-xmlParse("sampleAkomaNtoso.xml")
root<-xmlRoot(xml)
root
root[[1]][[2]]
root[[1]][[1]]
root[[1]][[1]][[1]]
root[[1]][[1]][[2]]
root[[1]][[1]][[1]]
root[[1]][[1]][[1]][[1]]
root[[1]][[1]][[1]][[1]][[1]]
root[[1]][[1]][[1]][[1]]
splitConferences(output2014Test)
quit
fix(splitConferences)
setwd("C:/Users/fotis.paraschiakos/Dropbox/Public/Javaprojects/Parliament/Parliament/data/csv  for conversion to xml/csv")
splitConferences(output2014Test)
quit
fix(splitConferences)
splitConferences(output2014Test)
quit
fix(splitConferences)
splitConferences(output2014Test)
quit
quit
fix(splitConferences)
splitConferences(output2014Test)
quit
fix(splitConferences)
tempchar<-"bla"
c(tempchar,"bla")
append(tempchar,"bla")
paste(tempchar,"bla")
paste("bla","bla")
paste("bla","bla",sep="")
fix(splitConferences)
setwd("C:/Users/fotis.paraschiakos/Dropbox/Public/Javaprojects/Parliament/Parliament/data/csv  for conversion to xml/csv")
splitConferences(output2014Test)
fix(splitConferences)
fix(splitConferences)
fix(splitConferences)
fix(splitConferences)
splitConferences(output2014Test)
`2.4.2014` <- read.csv("C:/Users/fotis.paraschiakos/Dropbox/Public/Javaprojects/Parliament/Parliament/data/csv  for conversion to xml/csv/2-4-2014.csv")
View(`2.4.2014`)
unique("2.4.2014$id")
unique(2.4.2014$id)
unique(2.4.2014$id)
2.4.2014$id
2.4.2014$speechId
2.4.2014$speechID
2.4.2014$SpeechID
View(`2.4.2014`)
2.4.2014$SpeakedID
2.4.2014$SpeakerID
2.4.2014
bla<-2.4.2014
bla<-read.csv("3-7-2014.csv")
bla$Speaker
bla$SpeakerID
unique(bla$SpeakerID)
unique(bla$SpeakerID!=NA)
unique(bla$SpeakerID==NA)
unique(bla$SpeakerID)
unique(bla$SpeakerID,na.exclude==TRUE)
unique(bla$SpeakerID,na.exclude=="TRUE")
na.omit(unique(bla$SpeakerID))
na.exclude(unique(bla$SpeakerID))
na.exclude(unique(bla$SpeakerID))[[1]]
na.exclude(unique(bla$SpeakerID))[1]
na.exclude(unique(bla$SpeakerID))[]
na.exclude(unique(bla$SpeakerID))[2]
na.exclude(unique(bla$SpeakerID))[1][1]
na.exclude(unique(bla$SpeakerID))[[1]]
na.exclude(unique(bla$SpeakerID))[[0]]
na.exclude(unique(bla$SpeakerID))
temp<-unique(bla$SpeakerID)
temp
omit.na(temp)
na.omit(temp)
na.omit(temp)[1]
na.omit(temp)[1,]
na.omit(temp)[,1]
temp<-[!is.na(temp)]
temp
temp<-x[!is.na(temp)]
temp<-temp[!is.na(temp)]
temp
temp.length
temp.length()
length(temp)
xml
root
fix(Folder2AkomaNtoso)
fileList<-list.files(/test)
fileList<-list.files("/test")
fileList
list.files("/test")
list.files("\test")
list.files("\\test")
setwd("C:/Users/fotis.paraschiakos/Dropbox/Public/Javaprojects/Parliament/Parliament/R project/ParliamentXMLTransform")
list.files("\\test")
list.files("/test")
list.files("//test")
list.files(path = getwd()+ "\test")
list.files(path = paste(getwd(),"/test")
)
list.files(path = paste(getwd(),"/test"))
list.files(path = paste(getwd(),"//test"))
list.files(path = paste(getwd(),"//test",sep=""))
list.files(path = paste(getwd(),"/test",sep=""))
fix(Folder2AkomaNtoso)
Folder2AkomaNtoso()
drbug(Folder2AkomaNtoso)
debug(Folder2AkomaNtoso)
Folder2AkomaNtoso()
fix(Folder2AkomaNtoso)
Folder2AkomaNtoso()
fix(Folder2AkomaNtoso)
Folder2AkomaNtoso()
debug(Folder2AkomaNtoso)
Folder2AkomaNtoso()
fix(Folder2AkomaNtoso)
Folder2AkomaNtoso()
fix(Folder2AkomaNtoso)
Folder2AkomaNtoso()
debug(Folder2AkomaNtoso)
Folder2AkomaNtoso()
fileList
fix(csv2AkomaNtoso)
fix(csv2AkomaNtoso)
fix(csv2AkomaNtoso)
Folder2AkomaNtoso()
fix(csv2AkomaNtoso)
fix(csv2AkomaNtoso)
require("XML")
xml<-xmlParse("sampleAkomaNtoso.xml")
fix(csv2AkomaNtoso)
root<-xmlRoot(xml)
index<-root[[1]][[1]][[1]][[1]]
index
addChildren(index,xmlNode(name = "TLCPerson", attrs = c(
id = 1,
href = paste("ontology/parlmember/1")),
showAs = "Fotis"
))
index<-root[[1]][[1]][[1]][[1]]
index
addChildren(index,newXMLNode(name = "TLCPerson", attrs = c(
id = 1,
href = paste("ontology/parlmember/1")),
showAs = "Fotis"
))
index
xml<-xmlParse("sampleAkomaNtoso.xml")
root<-xmlRoot(xml)
index<-root[[1]][[1]][[1]][[1]]
addChildren(index,newXMLNode(name = "TLCPerson", attrs = c(
id = 1,
href = paste("ontology/parlmember/1")),
showAs = "Fotis"
))
root<-xmlRoot(xml)
xml<-xmlParse("sampleAkomaNtoso.xml")
root<-xmlRoot(xml)
addChildren(index,newXMLNode(name = "TLCPerson", attrs = c(
id = 1,
href = paste("ontology/parlmember/1"),
showAs = "Fotis"
)
)
)
xml<-xmlNode(name = "TLCPerson", attrs = c(
id = 1,
href = paste("ontology/parlmember/1"),
showAs = "Fotis"
)
)
x,;
xml
index
index<-index[[1]]
index
addChildren(index,node)
addChildren(index,xml)
xml<-newXMLNode(name = "TLCPerson", attrs = c(
id = 1,
href = paste("ontology/parlmember/1"),
showAs = "Fotis"
)
)
addChildren(index,xml)
addChildren(index,xml)
index
addChildren(index,index)
xml<-xmlParse("sampleAkomaNtoso.xml")
root<-xmlRoot(xml)
index<-root[[1]][[1]][[1]][[1]]
index
addChildren(index,node)
node<-newXMLNode(name = "TLCPerson", attrs = c(
id = 1,
href = paste("ontology/parlmember/1"),
showAs = "Fotis"
)
)
addChildren(index,node)
xml
fix(csv2AkomaNtoso)
fix(csv2AkomaNtoso)
Folder2AkomaNtoso()
fix(csv2AkomaNtoso)
Folder2AkomaNtoso()
fix(Folder2AkomaNtoso)
fix(csvAkomaNtoso)
fix(csv3AkomaNtoso)
fix(csv2AkomaNtoso)
fix(csv2AkomaNtoso)
xml<-xmlParse("<xml><akomaNtoso>  <debate name=\"play\"> <meta>   <references source=\"#\">  </references> </meta> <preface> <docTitle>The Tempest</docTitle> </preface> <debateBody>  </debateBody> </debate></akomaNtoso></xml>")
install(XML)
require(XML)
xml<-xmlParse("<xml><akomaNtoso>  <debate name=\"play\"> <meta>   <references source=\"#\">  </references> </meta> <preface> <docTitle>The Tempest</docTitle> </preface> <debateBody>  </debateBody> </debate></akomaNtoso></xml>")
root<0xmlRoot(xml)
root<-xmlRoot(xml)
addChildren(root[[1]][[1]][[1]][[1]],newXMLNode(name="malakas"))
addChildren(root[[1]][[1]][[1]][[1]],newXMLNode(name="malakas",id="123"))
addChildren(root[[1]][[1]][[1]][[1]],newXMLNode(name="malakas",attrs=(id="malakasID"))
)
addChildren(root[[1]][[1]][[1]][[1]],newXMLNode(name="malakas",attrs=c(id="malakasID"))
)
xml<-xmlParse("<xml><akomaNtoso>  <debate name=\"play\"> <meta>   <references source=\"#\">  </references> </meta> <preface> <docTitle>The Tempest</docTitle> </preface> <debateBody>  </debateBody> </debate></akomaNtoso></xml>")
root<-xmlRoot(xml)
addChildren(root[[1]][[1]][[1]][[1]],newXMLNode(name="malakas",attrs=c(id="malakasID"))
)
addChildren(root[[1]][[1]][[1]][[1]],newXMLNode("malakas","eimai malakas",attrs=c(id="malakasID"))
)
xml
xml<-xmlParse("<xml><akomaNtoso>  <debate name=\"play\"> <meta>   <references source=\"#\">  </references> </meta> <preface> <docTitle>The Tempest</docTitle> </preface> <debateBody>  </debateBody> </debate></akomaNtoso></xml>")
root<-xmlRoot(xml)
root[[1]][[1]][[1]][[1]]
addChildren(root[[1]][[1]][[1]][[1]],newXMLNode("malakas","eimai malakas",attrs=c(id="malakasID"))
)
fix(csv2AkomaNtoso)
fix(csv2AkomaNtoso)
fix(csv2AkomaNtoso)
xml<-xmlParse("<xml><akomaNtoso>  <debate name=\"Conference\"> <meta>   <references source=\"#\">  </references> </meta> <preface> <docTitle></docTitle> </preface> <debateBody>  </debateBody> </debate></akomaNtoso></xml>")
root<-xmlRoot(xml)
root
root[[1]][[1]][[2]]
xml<-xmlParse("<xml><akomaNtoso>  <debate name=\"Conference\"> <meta>   <references source=\"#\">  </references> </meta> <preface> <docTitle> </docTitle> </preface> <debateBody>  </debateBody> </debate></akomaNtoso></xml>")
root[[1]][[1]][[2]]
xml<-xmlParse("<xml><akomaNtoso>  <debate name=\"Conference\"> <meta>   <references source=\"#\">  </references> </meta> <preface> </preface> <debateBody>  </debateBody> </debate></akomaNtoso></xml>")
root[[1]][[1]][[2]]
xml<-xmlParse("<xml><akomaNtoso>  <debate name=\"Conference\"> <meta>   <references source=\"#\">  </references> </meta> <preface> </preface> <debateBody>  </debateBody> </debate></akomaNtoso></xml>")
root<-xmlRoot(xml)
root[[1]][[1]][[2]]
fix(csv2AkomaNtoso)
fix(csv2AkomaNtoso)
fix(Folder2AkomaNtoso)
fix(csv2AkomaNtoso)
setwd("C:/Users/fotis.paraschiakos/Dropbox/Public/Javaprojects/Parliament/Parliament/R project/ParliamentXMLTransform/test")
fix(csv2AkomaNtoso)
setwd("C:/Users/fotis.paraschiakos/Dropbox/Public/Javaprojects/Parliament/Parliament/R project/ParliamentXMLTransform/test")
csv2AkomaNtoso
csv2AkomaNtoso(greekMpInformation)
setwd("C:/Users/fotis.paraschiakos/Dropbox/Public/Javaprojects/Parliament/Parliament/R project/ParliamentXMLTransform/test")
fix(csv2AkomaNtoso)
debug(csv2AkomaNtoso)
fix(csv2AkomaNtoso)
csv2AkomaNtoso(greekMpInformation)
debug(csv2AkomaNtoso)
csv2AkomaNtoso(greekMpInformation)
fileList
date
fileList
read.csv(date)
date
fileList[[1]]
fileList
debug(csv2AkomaNtoso)
csv2AkomaNtoso(greekMpInformation)
date
fileList
i
fileList[1]
fileList[[1]]
length(fileList)
i
date
date
setwd("C:/Users/fotis.paraschiakos/Dropbox/Public/Javaprojects/Parliament/Parliament/R project/ParliamentXMLTransform/test")
fix(splitConferences)
fix(splitConferences)
splitConferences(output2014Test)
!
fix(splitConferences)
debug(splitConferences)
fix(splitConferences)
fix(splitConferences)
debug (splitConferences)
splitConferences(output2014Test)
tempRow
output
output
nrow(output)
nrow(output)
splitConferences(output2014Test)
fix(splitConferences)
fix(splitConferences)
splitConferences(output2014Test)
fix(splitConferences)
fix(splitConferences)
splitConferences(output2014Test)
fix(splitConferences)
fix(splitConferences)
splitConferences(output2014Test)
fix(splitConferences)
View(output2014Test)
fix(splitConferences)
splitConferences(output2014Test)
X
currentDate
currentDate
fix(splitConferences)
splitConferences(output2014Test)
tempRow
tempRow
tempRow
tempRow
currentDate
file
as.character(file)
fix(splitConferences)
splitConferences(output2014Test)
splitConferences(output2014Test)
fix(splitConferences)
splitConferences(output2014Test)
fix(csv2AkomaNtoso)
csv2AkomaNtoso
csv2AkomaNtoso(greekMpInformation)
debug(csv2AkomaNtoso)
csv2AkomaNtoso(greekMpInformation)
fix(csv2AkomaNtoso)
csv2AkomaNtoso()
debug(csv2AkomaNtoso)
csv2AkomaNtoso()
fileList
\
xml
fix(csv2AkomaNtoso)
csv2AkomaNtoso()
csv2AkomaNtoso(greekMpInformation)
csv2AkomaNtoso(greekMpInformation)
greekMpInformation
debug(csv2AkomaNtoso)
csv2AkomaNtoso(greekMpInformation)
input
parlmembers
fix(csv2AkomaNtoso)
csv2AkomaNtoso(greekMpInformation)
fix(csv2AkomaNtoso)
paste0("ss","ss")
fix(csv2AkomaNtoso)
fix(csv2AkomaNtoso)
csv2AkomaNtoso(greekMpInformation)
fix(csv2AkomaNtoso)
xml<-xmlParse("<xml><akomaNtoso>  <debate name=\"Conference\"> <meta>   <references source=\"#\">  </references> </meta> <preface> <docTitle></docTitle> </preface> <debateBody>  </debateBody> </debate></akomaNtoso></xml>")
root<-xmlRoot(xml)
root[[1]][[1]][[1]][[1]]
root[[1]][[1]][[1]]
root[[1]][[1]][[1]][[1]]<-newXMLNode(name = "TLCPerson", attrs = c(
id = "1",
href = paste("ontology/parlmember/","1"),
showAs = "Φωτης"
))
root[[1]][[1]][[1]][[1]]
root[[1]][[1]][[1]]
xml<-xmlParse("<xml><akomaNtoso>  <debate name=\"Conference\"> <meta>   <references source=\"#\">  </references> </meta> <preface> <docTitle></docTitle> </preface> <debateBody>  </debateBody> </debate></akomaNtoso></xml>")
root<-xmlRoot(xml)
root[[1]][[1]][[1]][[1]]
root[[1]][[1]][[1]][[1]][[1]]<-newXMLNode(name = "TLCPerson", attrs = c(
id = "1",
href = paste("ontology/parlmember/","1"),
showAs = "Φωτης"
))
root[[1]][[1]][[1]][[1]][[1]]
root[[1]][[1]][[1]][[1]]
fix(csv2AkomaNtoso)
addChildren(root[[1]][[1]][[1]][[1]],newXMLNode(name = "TLCPerson", attrs = c(
+     id = "1",
+     href = paste("ontology/parlmember/","1"),
+     showAs = "Φωτης"
+ )))
addChildren(root[[1]][[1]][[1]][[1]],newXMLNode(name = "TLCPerson", attrs = c(
+     id = "1",
+     href = paste("ontology/parlmember/","1"),
+     showAs = "Fotis"
+ )))
fix(csv2AkomaNtoso)
fix(csv2AkomaNtoso)
xml<-xmlParse("<xml><akomaNtoso>  <debate name=\"Conference\"> <meta>   <references source=\"#\">  </references> </meta> <preface> <docTitle></docTitle> </preface> <debateBody>  </debateBody> </debate></akomaNtoso></xml>")
root<-xmlRoot(xml)
require("XML")
xml<-xmlParse("<xml><akomaNtoso>  <debate name=\"Conference\"> <meta>   <references source=\"#\">  </references> </meta> <preface> <docTitle></docTitle> </preface> <debateBody>  </debateBody> </debate></akomaNtoso></xml>")
root<-xmlRoot(xml)
root
root[1][1][3]
root[1][1]
root[1][1][1]
root[[1]][[1]][[]]
root[[1]][[1]][[3]]
addchildren(root[[1]][[1]][[3]],bla)
addChildrenhildren(root[[1]][[1]][[3]],bla)
addChildren(root[[1]][[1]][[3]],bla)
root[[1]][[1]][[3]]
xml<-xmlParse("<xml><akomaNtoso>  <debate name=\"Conference\"> <meta>   <references source=\"#\">  </references> </meta> <preface> <docTitle></docTitle> </preface> <debateBody>  </debateBody> </debate></akomaNtoso></xml>")
root<-xmlRoot(xml)
fix(csv2AkomaNtoso)
csv2AkomaNtoso(greekMpInformation)
csv2AkomaNtoso(greekMpInformation)
fix(csv2AkomaNtoso)
fix(csv2AkomaNtoso)
fix(csv2AkomaNtoso)
setwd("C:/Users/fotis.paraschiakos/Dropbox/Public/Javaprojects/Parliament/Parliament/R project/ParliamentXMLTransform/test")
fix(csv2AkomaNtoso)
csv2AkomaNtoso(greekMpInformation)
fix(csv2AkomaNtoso)
fix(csv2AkomaNtoso)
csv2AkomaNtoso(greekMpInformation)
fix(csv2AkomaNtoso)
csv2AkomaNtoso(greekMpInformation)
fix(csv2AkomaNtoso)
csv2AkomaNtoso(greekMpInformation)
fix(csv2AkomaNtoso)
fix(csv2AkomaNtoso)
fix(csv2AkomaNtoso)
csv2AkomaNtoso(greekMpInformation)
csv2AkomaNtoso(greekMpInformation)
fix(csv2AkomaNtoso)
input<-read.csv("9-1-2014")
setwd("C:/Users/fotis.paraschiakos/Dropbox/Public/Javaprojects/Parliament/Parliament/R project/ParliamentXMLTransform/test")
input<-read.csv("9-1-2014")
csv2AkomaNtoso(greekMpInformation)
fix(csv2AkomaNtoso)
csv2AkomaNtoso(greekMpInformation)
fix(csv2AkomaNtoso)
csv2AkomaNtoso(greekMpInformation)
fix(csv2AkomaNtoso)
csv2AkomaNtoso(greekMpInformation)
fix(csv2AkomaNtoso)
warnings()
csv2AkomaNtoso(greekMpInformation)
fix(csv2AkomaNtoso)
csv2AkomaNtoso(greekMpInformation)
fix(csv2AkomaNtoso)
fix(csv2AkomaNtoso)
csv2AkomaNtoso(greekMpInformation)
fix(csv2AkomaNtoso)
csv2AkomaNtoso(greekMpInformation)
fix(csv2AkomaNtoso)
fix(csv2AkomaNtoso)
fix(csv2AkomaNtoso)
csv2AkomaNtoso(greekMpInformation)
fix(csv2AkomaNtoso)
fix(csv2AkomaNtoso)
gsub("\d+","","Σελίδα 1000")
gsub("\\d+","","Σελίδα 1000")
gsub("\\d+","","Σελίδα 1000")
gsub("\\d+","αα","Σελίδα 1000")
gsub("\\d+","aa","Σελίδα 1000")
fix(csv2AkomaNtoso)
csv2AkomaNtoso(greekMpInformation)
fix(csv2AkomaNtoso)
csv2AkomaNtoso(greekMpInformation)
fix(csv2AkomaNtoso)
fix(csv2AkomaNtoso)
csv2AkomaNtoso(greekMpInformation)
fix(csv2AkomaNtoso)
fix(csv2AkomaNtoso)
csv2AkomaNtoso(greekMpInformation)
fix(csv2AkomaNtoso)
csv2AkomaNtoso(greekMpInformation)
fix(csv2AkomaNtoso)
csv2AkomaNtoso(greekMpInformation)
fix(csv2AkomaNtoso)
csv2AkomaNtoso(greekMpInformation)
fix(csv2AkomaNtoso)
csv2AkomaNtoso(greekMpInformation)
read.csv("2014-09-18")
read.csv("2014-09-18.xml")
read.csv("2014-09-18")
fix(csv2AkomaNtoso)
csv2AkomaNtoso(greekMpInformation)
fix(csv2AkomaNtoso)
